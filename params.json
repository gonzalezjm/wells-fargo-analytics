{"name":"Wells Fargo Analytics Competition","tagline":"Fall 2015 Data Science Project","body":"\r\n### Process Flow Diagram\r\n![Process-Diagram-img](http://i.imgur.com/UBQ4LBQ.png)\r\n\r\nIn order to attain a workable dataset, we import dataset.txt into a data frame, then clean the FullText column of non-ASCII characters, punctuation, and other “trouble” terms we might come across, such as words with no meaningful value in the context of the analysis. We then add a column to our data frame called “BankID”, which allows us to keep track of which bank each comment references. \r\n\r\nOnce we have our data properly sorted, we create five Document-Term Matrices and five Term-Document Matrices; one of each for the entire dataset, and one of each for each bank. Using the Document-Term matrices, we can analyze the frequencies at which each term appears in the dataset, in the entire dataset or within the context of a specific bank. This allows us to see the most commonly used words, and consequently, the most commonly referenced topics.\r\n\r\nEach comment is scored on its “sentiment” by matching the terms in the comment to two libraries of “positive” and “negative” terms. Each score is found by subtracting the number of negative terms in the comment from the number of positive terms in the comment. We then use “very positive” (score > 1) and “very negative” (score < -1) scores to calculate the global score using the formula GlobalScore = 100 * verypos / (verypos + veryneg).\r\n\r\n\r\n### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here [using GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/), select a template crafted by a designer, and publish. After your page is generated, you can check out the new `gh-pages` branch locally. If you’re using GitHub Desktop, simply sync your repository and you’ll see the new branch.\r\n\r\n### Designer Templates\r\nWe’ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}